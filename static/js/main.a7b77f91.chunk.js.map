{"version":3,"sources":["pages/logo.png","pages/home.js","getWeb3.js","pages/registrer_dashboard.js","pages/render.js","App.js","reportWebVitals.js","index.js","ipfs.js","pages/history.js","pages/patients_dashboard.js","pages/doctor_dashboard.js","config.js"],"names":["Register","props","pnameRef","React","useRef","phoneRef","genderRef","dobRef","bloodRef","dnameRef","facultyRef","licenceRef","dphoneRef","hnameRef","className","src","logo","width","height","alt","type","name","placeholder","ref","required","id","value","Button","onClick","event","preventDefault","current","phone","gender","dob","blood","patientRegister","class","contact","faculty","hname","license","doctorRegister","handlelogin","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","givenProvider","Verifier","useState","recordlen","setRecordLength","records","setRecords","dname","setDname","setLicense","currentAccount","localStorage","getItem","isDoctor","ispatient","contract","eth","Contract","ABI","CONTRACT_ADDRESS","e","methods","registerDoctor","send","from","gas","alert","getDoctorsList","getRegisteredDoctorslength","call","rlen","record","i","getRegisteredDoctorsList","licn","getDoctorbyLicense","result","push","hospital","_faculty","useEffect","classes","makeStyles","table","minWidth","root","container","maxHeight","useStyles","StyledTableCell","withStyles","theme","head","backgroundColor","palette","info","main","color","common","blue","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","history","Navbar","expand","Toggle","Collapse","Nav","Link","href","logout","Tab","Container","defaultActiveKey","Row","Col","sm","variant","Item","eventKey","Content","Pane","Box","mt","mb","Paper","TableContainer","Table","size","stickyHeader","aria-label","TableHead","TableBody","map","index","TextField","fullWidth","margin","label","onChange","target","style","Render","setCurrentAccount","setContract","user","setUser","getWeb3Data","getAccounts","accounts","instance","addPatient","addDoctor","setItem","isRegistered","getDoctorByAddress","doctor","isApproved","doctorLogin","licenseno","error","getPatientDetails","patient","_name","_phone","_dob","_bloodgroup","_gender","grantAccess","revokeAccess","revoke_access","clear","location","reload","path","exact","owner","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","ipfs","require","host","port","protocol","createBrowserHistory","Patient","reasonRef","dateRef","ipfshash","setIpfshash","buffer","setBuffer","doctorRef","grantRef","bloodgroup","isAdmin","StyledTablecell","fontSIze","pink","getPatientRecord","uploadrecord","reason","date","addRecord","res","getrecordlist","recordlength","recordlist","getPatientRecords","Details","handlechange","file","files","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","onsubmit","add","ipfsHash","hash","Upload","onSubmit","Report","length","key","visitedDate","Access","title","DocDashboard","setName","setPhone","setGender","setDob","setBlood","accountAddr","setAccountAddr","authorized","isAuthorized","setVisDate","setReason","docname","access","visDate","addPatientRecord","url","toString","String","o","alignSelf","component","InputLabelProps","shrink","stopPropagation","onload"],"mappings":"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","file":"static/js/main.a7b77f91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a59b823b.png\";","import { TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport logo from \"./logo.png\";\n// import PhoneInput from \"react-phone-number-input/input\"\n\nfunction Register(props) {\n  const pnameRef = React.useRef();\n  const phoneRef = React.useRef();\n  const genderRef = React.useRef();\n  const dobRef = React.useRef();\n  const bloodRef = React.useRef();\n  const dnameRef = React.useRef();\n  const facultyRef = React.useRef();\n  const licenceRef = React.useRef();\n  const dphoneRef = React.useRef();\n  const hnameRef = React.useRef();\n\n  return (\n    <div className=\"Main\">\n      <div className=\"Register\">\n        {/* <Navbar/> */}\n\n        <div className=\"meDossier\">\n          <img\n            src={logo}\n            width=\"150\"\n            height=\"60\"\n            className=\"d-inline-block align-top\"\n            alt=\"React Bootstrap logo\"\n          ></img>\n        </div>\n        <div className=\"heading\">\n          <h1> Welcome to MeDossier</h1>\n          <h5>The only place to store and access your record securely</h5>\n        </div>\n        <div className=\"b-container\">\n          <div className=\"Patient small card\">\n            <h5>\n              {\" \"}\n              <b>Register as Patient</b>\n            </h5>\n            <form>\n              <label>Name: </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                ref={pnameRef}\n                required\n              ></input>\n              <br />\n              <label>PhoneNo: </label>\n              <input\n                type=\"text\"\n                placeholder=\"9746025484\"\n                ref={phoneRef}\n                required\n              />\n\n              <br />\n              <label>DateofBirth:</label>\n              <input type=\"Date\" ref={dobRef} required />\n              <br />\n              <label>Blood Group: </label>\n              <input type=\"text\" placeholder=\"O+ve\" ref={bloodRef} required />\n              <br />\n              <label id=\"gender\"> Gender:</label>\n              <select ref={genderRef} required>\n                <option value=\"Select \">Select</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Others\"> Others</option>\n              </select>\n              <br />\n\n              <Button\n                onClick={(event) => {\n                  event.preventDefault();\n                  const name = pnameRef.current.value;\n                  const phone = phoneRef.current.value;\n                  const gender = genderRef.current.value;\n                  const dob = dobRef.current.value;\n                  const blood = bloodRef.current.value;\n                  props.patientRegister(name, phone, gender, dob, blood);\n                }}\n              >\n                {\" \"}\n                <i class=\"fas fa-upload\"></i>\n                Submit{\" \"}\n              </Button>\n            </form>\n          </div>\n          <br />\n          {/* Doctor login/signup\n           */}\n          <div className=\"Doctor small card\">\n            <h5>\n              {\" \"}\n              <b>Register as Doctor</b>\n            </h5>\n            <form>\n              <label>Name: </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                required\n                ref={dnameRef}\n              ></input>\n              <br />\n              <label>License Number:</label>\n              <input\n                type=\"text\"\n                placeholder=\"License number\"\n                ref={licenceRef}\n                required\n              />\n              <br />\n              <label>Hospital Name:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Name of the hospital\"\n                ref={hnameRef}\n                required\n              />\n              <br />\n              <label> ContactNo:</label>\n              <input\n                type=\"text\"\n                placeholder=\"9746025484\"\n                ref={dphoneRef}\n                required\n              />\n\n              <br />\n              <label>Faculty: </label>\n              <input\n                type=\"text\"\n                name=\"faculty\"\n                placeholder=\"Enter your faculty\"\n                ref={facultyRef}\n                required\n              />\n              <br />\n              <Button\n                onClick={(event) => {\n                  event.preventDefault();\n                  const name = dnameRef.current.value;\n                  const contact = dphoneRef.current.value;\n                  const faculty = facultyRef.current.value;\n                  const hname = hnameRef.current.value;\n                  const license = licenceRef.current.value;\n                  props.doctorRegister(name, hname, faculty, contact, license);\n                }}\n              >\n                {\" \"}\n                <i class=\"fas fa-upload\"></i> Submit\n              </Button>\n            </form>\n          </div>\n        </div>\n        <div className=\"login small card\">\n          <h5>Already have an account?</h5>\n          <Button\n            onClick={() => {\n              props.handlelogin();\n            }}\n          >\n            {\" \"}\n            <i class=\"fas fa-sign-in-alt\"></i> Login\n          </Button>\n        </div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\nexport default Register;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider|| Web3.givenProvider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;","import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableHead,\n  TableContainer,\n  TableBody,\n  TableCell,\n  TableRow,\n  Card,\n  Box,\n  Paper,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Tabs, Tab, Row, Col, Nav, Navbar } from \"react-bootstrap\";\nimport \"./general.css\";\nimport logo from \"./logo.png\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\nimport history from \"./history\";\n\n//main dashboard\nfunction Verifier(props) {\n  const [recordlen, setRecordLength] = useState(0);\n  const [records, setRecords] = useState([]);\n  const [dname, setDname] = useState(\"\");\n  const [license, setLicense] = useState(0);\n\n  const currentAccount = localStorage.getItem(\"currentAccount\");\n  const isDoctor = localStorage.getItem(\"isdoctor\");\n  const ispatient = localStorage.getItem(\"ispatient\");\n\n  const web3 = new Web3(Web3.givenProvider);\n  const contract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n\n  const Register = async (e) => {\n    try {\n      //whether doctor is authorized or not\n\n      await contract.methods\n        .registerDoctor(dname, license)\n        .send({ from: currentAccount, gas: 1000000 });\n    } catch (error) {\n      console.log(error);\n      alert(\"Error in Registration\");\n    }\n  };\n\n  const getDoctorsList = async (e) => {\n    try {\n      //check whether doctor is authorized or not\n\n      //get the number of records\n      const rlen = await contract.methods.getRegisteredDoctorslength().call();\n      console.log(\"record length\" + rlen);\n      setRecordLength(rlen);\n\n      let record = [];\n      for (var i = 0; i < recordlen; i++) {\n        const licn = await contract.methods\n          .getRegisteredDoctorsList(i)\n          .call({ from: currentAccount });\n        console.log(licn);\n        try {\n          const result = await contract.methods\n            .getDoctorbyLicense(licn)\n            .call({ from: currentAccount });\n          console.log(result);\n          record.push({\n            dname: result.name,\n            hname: result.hospital,\n            faculty: result._faculty,\n            license: licn,\n          });\n        } catch {\n          record.push({\n            dname: \"No account/Not Logged in After Registration\",\n            hname: \"----\",\n            faculty: \"----\",\n            license: licn,\n          });\n        }\n      }\n      console.log(record);\n      setRecords(record);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDoctorsList();\n    // getDoctorDetails();\n  }, [recordlen]);\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 700,\n    },\n    root: {\n      width: \"100%\",\n    },\n    container: {\n      maxHeight: 440,\n    },\n  });\n  const classes = useStyles();\n\n  //Styling for table cell\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.info.main,\n      color: theme.palette.common.blue,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\n  if (!currentAccount) {\n    history.push(\"/\");\n  }\n  if (isDoctor == \"true\") {\n    history.push(\"/doctor_dashboard\");\n  }\n\n  if (ispatient == \"true\") {\n    history.push(\"/patient\");\n  }\n\n  return (\n    <div className=\"Registrer\">\n      <div className=\"nav_main\">\n        {getDoctorsList}\n        <Navbar\n          // bg=\"light\"\n          color=\"purple\"\n          expand=\"lg\"\n        >\n          <img\n            src={logo}\n            width=\"120\"\n            height=\"40\"\n            className=\"d-inline-block align-top\"\n          />\n          {/* patient */}\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav.Link a href=\"/registration\">\n              {\" \"}\n              <i class=\"far fa-1x fa-user-circle\">\n                {\" \"}\n                <b>License Registration Office</b>{\" \"}\n              </i>{\" \"}\n            </Nav.Link>\n            <Button onClick={(e) => props.logout()}>\n              {\" \"}\n              <i class=\"fas fa-1x fa-sign-out-alt\" /> Log out\n            </Button>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n      {/* End Navbar */}\n\n      {/* Side Tabs */}\n      <div className=\"tab-wrapper\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <Tab.Container defaultActiveKey=\"doctors_list\">\n                <Row>\n                  <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <div>\n                        <Nav.Item>\n                          <Nav.Link eventKey=\"doctors_list\">\n                            <b> Registered Doctors</b>\n                          </Nav.Link>\n                          <hr />\n                        </Nav.Item>\n                      </div>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"new_registration\">\n                          {\" \"}\n                          <b>New Registration </b>\n                        </Nav.Link>\n                        <hr />\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n                  <Col sm={9}>\n                    <Tab.Content>\n                      {/* Doctors Details */}\n                      <Tab.Pane eventKey=\"doctors_list\">\n                        <div className=\"Details\">\n                          <h3>Welcome to the MeDossier</h3>\n                          <br />\n                          <h5>The Following Doctors are Registered</h5>\n                        </div>\n\n                        {/* Registered Doctor List */}\n                        <div class=\"small-card\">\n                          <div className=\"table\">\n                            <Box mt={3} mb={3}>\n                              <Paper className={classes.root}>\n                                <TableContainer className={classes.container}>\n                                  <Table\n                                    className={classes.table}\n                                    size={\"small\"}\n                                    stickyHeader\n                                    aria-label=\"sticky table\"\n                                  >\n                                    <TableHead>\n                                      <TableRow>\n                                        <StyledTableCell>\n                                          License\n                                        </StyledTableCell>\n                                        <StyledTableCell>Name</StyledTableCell>\n                                        <StyledTableCell>\n                                          Faculty\n                                        </StyledTableCell>\n                                        <StyledTableCell>\n                                          Working Hospital\n                                        </StyledTableCell>\n                                      </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                      {records.map((record, index) => {\n                                        return (\n                                          <StyledTableRow key={index}>\n                                            <TableCell>\n                                              {record[\"license\"]}\n                                            </TableCell>\n                                            <TableCell>\n                                              {record[\"dname\"]}\n                                            </TableCell>\n                                            <TableCell>\n                                              {record[\"faculty\"]}\n                                            </TableCell>\n                                            <TableCell>\n                                              {record[\"hname\"]}\n                                            </TableCell>\n                                          </StyledTableRow>\n                                        );\n                                      })}\n                                    </TableBody>\n                                  </Table>\n                                </TableContainer>\n                              </Paper>\n                            </Box>\n                          </div>\n                        </div>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"new_registration\">\n                        <div className=\"Details\">\n                          <h3>Welcome to the MeDossier</h3>\n                          <br />\n                          <h5>New Doctor Registration</h5>\n                        </div>\n                        <div className=\"small card\">\n                          <h3>Register Doctor</h3>\n                          <hr></hr>\n                          <form>\n                            <TextField\n                              id=\"outlined-basic full-width\"\n                              fullWidth={true}\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"License Number\"\n                              // style ={{height:60}}\n                              onChange={(e) => setLicense(e.target.value)}\n                            />\n                            <TextField\n                              id=\"outlined-basic\"\n                              fullWidth={true}\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"Doctor Name\"\n                              onChange={(e) => setDname(e.target.value)}\n                            />\n\n                            <Button\n                              onClick={Register}\n                              variant=\"contained\"\n                              fullWidth\n                              margin=\"normal\"\n                              style={{\n                                backgroundColor: \"#0080FF\",\n                                color: \"floralwhite\",\n                              }}\n                            >\n                              Register\n                            </Button>\n                          </form>\n                        </div>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Verifier;\n","import React,{useState ,useEffect} from \"react\";\nimport { Switch ,Route ,Router} from \"react-router-dom\";\nimport Register from './home';\nimport getWeb3 from '../getWeb3';\nimport history from './history';\nimport Patient from './patients_dashboard';\nimport DocDashboard from './doctor_dashboard';\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\nimport Verifier from \"./registrer_dashboard\";\n\n\nfunction Render() {\n  \n const[currentAccount,setCurrentAccount]= useState('');\n const[contract, setContract] = useState({});\n const[user,setUser] = useState([]);\n const getWeb3Data = async()=>{\n   try{\n      //obtain web3 from getWeb3\n      const web3 = await getWeb3();\n      //obtain the accounts\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n//initialize contract\n      const instance = await new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      setCurrentAccount(accounts[0]);\n      setContract({...instance});\n   }\n   catch(error){\n     alert(\"Cannot load web3 ,contract. Consult console for details\");\n     console.log(error);\n   }\n }\n  //Register Patient\n  const patientRegister = async(name,phone,gender,dob,blood)=>{\n    try{\n      console.log(name,phone,gender,dob,blood);\n      console.log(currentAccount);\n      await contract.methods.addPatient(name,phone,gender,dob,blood).send({from:currentAccount,gas:1000000});\n      // await getWeb3Data();\n    }\n    catch(error){\n      console.log(error);\n    }\n  }\n  //Register/Add Doctor\n  const doctorRegister = async(name,hname,contact,faculty,license)=>{\n    try{\n      console.log(name,hname,contact,faculty);\n      const result = await contract.methods.addDoctor(name,hname,contact,faculty,license).send({from:currentAccount,gas:1000000});\n      // await getWeb3Data();\n\n    }\ncatch(error){\n  console.log(error);\n}\n  }\n  //Handle  patient Login\n  const handlelogin = async()=>{\n    localStorage.setItem('currentAccount',currentAccount)\n    const result = await contract.methods.user(currentAccount).call({from:currentAccount});\n    console.log(result);\n    if(result==0){\n      try{\n        console.log(\"success\");\n        const registered = await contract.methods.isRegistered(currentAccount).call({from:currentAccount});\n        if(registered){\n          const doctor = await contract.methods.getDoctorByAddress(currentAccount).call({from:currentAccount});\nif(doctor.isApproved==false){\n  await contract.methods.doctorLogin().send({from:currentAccount,gas:1000000})\n\n}\n        \n        // await contract.methods.doctorLogin().send({from:currentAccount,gas:1000000})\n        // const doctor = await contract.methods.getDoctorByAddress(currentAccount).call({from:currentAccount});\n        setUser(doctor);\n        localStorage.setItem('docname',doctor.name)\n        localStorage.setItem('faculty',doctor.faculty)\n        localStorage.setItem('contact',doctor.contact)\n        localStorage.setItem('isApproved',doctor.isApproved)\n        localStorage.setItem('license',doctor.licenseno)\n        localStorage.setItem('hname',doctor.hname)\n        localStorage.setItem('isdoctor','true')\n\n        console.log(doctor)\n          history.push('/doctor_dashboard')\n        }\n        else{\n          alert(\"Your License is not registered! Please register first to access meDossier.\")\n        }\n        // }\n        \n      }\n      catch(error){\n        console.error(error);\n        // alert(error)\n        alert(\"No records found\")\n      }\n    }\n    else if(result==1){\n      try{\n        console.log(\"sucess\");\n        const patient = await contract.methods.getPatientDetails(currentAccount).call({from:currentAccount});\n\n        setUser(patient);\n        console.log(patient)\n        // if(patient.length!==0){\n          // getPatientRecord();\n         localStorage.setItem('name',patient._name)\n        localStorage.setItem('phone',patient._phone)\n        localStorage.setItem('dob',patient._dob)\n        localStorage.setItem('bloodgroup',patient._bloodgroup)\n        localStorage.setItem('gender',patient._gender)\n        // localStorage.setItem('ispatient','true')\n        localStorage.setItem('ispatient',\"true\")\n\n        \n        // localStorage.setItem('hname',doctor.hname)\n  \n          history.push('/patient')\n        // }\n        \n      }\n      catch(error){\n        console.error(error);\n        // alert(error)\n        alert(\"No records found\")\n      }\n    }\n    else if(result==2) {\n     localStorage.setItem('isUser','true');\n      \n        history.push('/registration')\n  \n    }\n    else{\n      alert(\"User not registered!\")\n    }\n   \n  }\n//Patient grant Access to doctor\n  const grantAccess = async(doctor)=>{\n    try{\n      await contract.methods.grantAccess(doctor).send({from:currentAccount,gas:1000000})\n    }\n    catch(error){\n      console.error(error);\n    }\n  }\n  //Patient revoke access from doctor\n  const revokeAccess = async(doctor)=>{\n    try{\n      console.log(doctor)\n      await contract.methods.revoke_access(doctor).send({from:currentAccount,gas:1000000})\n    }\n    catch(error){\n      console.error(error);\n      alert(error);\n    }\n  }\n\n  const logout=() =>{\n    localStorage.clear()\n    history.push('/')\n    window.location.reload(false);\n  }\n  \n  useEffect(()=>{\n    getWeb3Data();\n  },[]);\n  return (\n    \n      // <div className =\"Main\">\n        <Router history={history}>\n        <Switch>\n          <Route path ='/' exact>\n          <Register\n          patientRegister={patientRegister}\n          doctorRegister ={doctorRegister}\n          handlelogin ={handlelogin}\n\n          />\n          </Route>\n          <Route path ='/patient'>\n            <Patient\n            patient={user}\n            grantAccess ={grantAccess}\n            revokeAccess ={revokeAccess}\n            logout ={logout}\n\n            // getPatientRecord ={getPatientRecord}\n            // records ={records}\n            />\n          </Route>\n          <Route exact path = \"/doctor_dashboard\">\n          <DocDashboard \n          doctor = {user}\n          logout ={logout}\n          currentAccount ={currentAccount}\n          />\n          \n          </Route>\n          <Route exact path = \"/registration\">\n          <Verifier \n          owner = {user}\n          logout ={logout}\n\n          />\n          \n          </Route>\n          \n          </Switch>\n          </Router>\n  \n      // </div>\n    )\n  }\n\nexport default Render","\nimport Render from './pages/render';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Render />    \n    </div>\n  )}\n\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const IPFS = require('ipfs-api');\nconst ipfs = new IPFS({ \n    host: 'ipfs.infura.io', \n    port: 5001, \n    protocol: 'https' \n});\n\nexport default ipfs;","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React, { useEffect, useRef, useState } from \"react\";\nimport { Tabs, Tab, Row, Nav, Navbar, Card, Button } from \"react-bootstrap\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ipfs from \"../ipfs\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from \"./logo.png\";\nimport \"./general.css\";\nimport \"./patient.css\";\nimport history from \"./history\";\nimport Web3 from \"web3\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\n\nfunction Patient(props) {\n  const dnameRef = useRef();\n  const reasonRef = useRef();\n  const dateRef = useRef();\n  const addressRef = useRef();\n  const [ipfshash, setIpfshash] = useState();\n  const [buffer, setBuffer] = useState();\n  const [records, setRecords] = useState([]);\n\n  console.log(props.records);\n  console.log(props.patient);\n  // const[records,setRecords] =useState([]);\n  const doctorRef = useRef();\n  const grantRef = useRef();\n\n  const name = localStorage.getItem(\"name\");\n  const dob = localStorage.getItem(\"dob\");\n  const gender = localStorage.getItem(\"gender\");\n  const bloodgroup = localStorage.getItem(\"bloodgroup\");\n  const phone = localStorage.getItem(\"phone\");\n  const currentAccount = localStorage.getItem(\"currentAccount\");\n  const isDoctor = localStorage.getItem(\"isdoctor\");\n  const isAdmin = localStorage.getItem(\"isUser\");\n  const ispatient = localStorage.getItem(\"ispatient\");\n\n  const web3 = new Web3(Web3.givenProvider);\n  const contract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 700,\n    },\n    root: {\n      width: \"100%\",\n    },\n    container: {\n      maxHeight: 440,\n    },\n  });\n  const classes = useStyles();\n  const StyledTablecell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.info.main,\n      color: theme.palette.common.blue,\n    },\n    body: {\n      fontSIze: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n        color: theme.palette.common.pink,\n      },\n    },\n  }))(TableRow);\n\n  useEffect(() => {\n    getPatientRecord();\n  }, []);\n\n  const uploadrecord = async (dname, reason, date) => {\n    try {\n      console.log(\"hh\");\n      console.log(dname, reason, date);\n      console.log(currentAccount);\n      console.log(contract);\n      const res = await contract.methods\n        .addRecord(dname, reason, date, ipfshash, currentAccount)\n        .send({ from: currentAccount });\n      console.log(res);\n      getPatientRecord();\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  //Get Patient details by patient\n  const getPatientRecord = async () => {\n    try {\n      const recordlength = await contract.methods\n        .getrecordlist(currentAccount)\n        .call({ from: currentAccount });\n      const recordlist = [];\n      for (let i = 0; i < recordlength; i++) {\n        const record = await contract.methods\n          .getPatientRecords(currentAccount, i)\n          .call({ from: currentAccount });\n        console.log(record);\n\n        recordlist.push(record);\n      }\n      setRecords(recordlist);\n      // localStorage.setItem('dname',records.dname);\n      // localStorage.setItem('reason',records.reason)\n      // localStorage.setItem('visitDate',records.visitDate)\n      // localStorage.setItem('ipfs',records.ipfs)\n\n      // console.log(records)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const Details = () => {\n    return (\n      <div className=\"Details\">\n        <h5>\n          Medical Records are important for you and we care about them and store\n          them securely! Get your records anywhere with just a touch!\n        </h5>\n        <div className=\"card\">\n          <h3>Your Details</h3>\n          <hr></hr>\n          <div>\n            <b>\n              Account Address:<span>{currentAccount}</span>\n            </b>\n          </div>\n          <div className=\"details\">\n            <b>Name : </b>\n            <span>{name}</span>\n            <br></br>\n            <b>Phone </b>:<span>{phone}</span>\n            <br></br>\n            <b>Gender </b>:<span>{gender}</span>\n            {/* </b> */}\n            <br />\n            <b>Date of Birth </b>:<span>{dob}</span>\n            {/* </b> */}\n            <br></br>\n            <b>Blood Group </b>:<span>{bloodgroup}</span>\n            {/* </b> */}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const handlechange = async (event) => {\n    event.preventDefault();\n    //capture the userfile\n    const file = event.target.files[0];\n    //Read the file\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    //file is converted to a buffer to prepare for uploading to IPFS\n    reader.onloadend = () => {\n      let buffer = Buffer(reader.result);\n      setBuffer(buffer);\n      console.log(\"buffer\", buffer);\n    };\n  };\n  const onsubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"hh\");\n    const ipfsHash = await ipfs.add(buffer);\n    console.log(ipfsHash);\n    console.log(ipfsHash[0].hash);\n    setIpfshash(ipfsHash[0].hash);\n  };\n\n  const Upload = () => {\n    return (\n      <div className=\"ReportUpload\">\n        <h5>\n          {\" \"}\n          !!!Upload your records to the meDossier for the highest level of\n          security!!!\n        </h5>\n        <Card className=\"small card\">\n          <div className=\"upload\">\n            <label> Upload your report to IPFS</label>\n            <form onSubmit={onsubmit}>\n              <input type=\"file\" onChange={handlechange} />\n              <br />\n              <Button onClick={onsubmit}>Submit</Button>\n            </form>\n          </div>\n\n          {/* Upload file to blockchain */}\n          <form>\n            <label> Upload your record to blockchain </label>\n            <br />\n            Name:\n            <input\n              type=\"text\"\n              placeholder=\"Name of the doctor\"\n              ref={dnameRef}\n            />\n            <br />\n            Reason:{\" \"}\n            <input\n              type=\"text\"\n              placeholder=\"Reason to visit hospital\"\n              ref={reasonRef}\n            />\n            <br />\n            VisitedDate: <input type=\"date\" ref={dateRef} />\n            <br />\n            <br />\n            {/* <input type =\"submit\"/> */}\n            <Button\n              onClick={(event) => {\n                event.preventDefault();\n\n                const dname = dnameRef.current.value;\n                const reason = reasonRef.current.value;\n                const date = dateRef.current.value;\n                //  const address = reasonRef.current.value\n\n                uploadrecord(dname, reason, date);\n              }}\n            >\n              Submit\n            </Button>\n          </form>\n        </Card>\n      </div>\n    );\n  };\n\n  const Report = () => {\n    if (records.length === 0) {\n      return (\n        <div>\n          <h2>Your Report</h2>\n          <p> Your record will appear here.</p>\n          <p> loading........</p>\n        </div>\n      );\n    }\n    if (!currentAccount) {\n      history.push(\"/\");\n    }\n    if (isDoctor == \"true\") {\n      history.push(\"/patient\");\n    }\n    if (isAdmin == \"true\") {\n      history.push(\"/Registration_office\");\n    }\n\n    return (\n      <div className=\"Report\">\n        <h2>Your Report</h2>\n        <Paper className={classes.root}>\n          <TableContainer className={classes.container}>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              stickyHeader\n              aria-label=\"sticky table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <StyledTablecell> #</StyledTablecell>\n                  <StyledTablecell>Doctor name</StyledTablecell>\n                  <StyledTablecell>Reason to visit doctor </StyledTablecell>\n                  <StyledTablecell>VisitedDate</StyledTablecell>\n                  <StyledTablecell>Records</StyledTablecell>\n                </TableRow>\n              </TableHead>\n\n              {records.map((record, key) => (\n                <TableBody>\n                  <StyledTableRow key={key}>\n                    <TableCell>{key}</TableCell>\n                    <TableCell>{record.dname}</TableCell>\n                    <TableCell>{record.reason}</TableCell>\n                    <TableCell>{record.visitedDate}</TableCell>\n                    <TableCell>\n                      <a\n                        href={`https://ipfs.io/ipfs/${record.ipfs}`}\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                        click here to view your record\n                      </a>\n                    </TableCell>\n                  </StyledTableRow>\n                </TableBody>\n              ))}\n            </Table>\n          </TableContainer>\n        </Paper>\n      </div>\n    );\n  };\n\n  const Access = () => {\n    return (\n      <div className=\"small card\">\n        <h3>Grant/Revoke Access</h3>\n        <hr />\n\n        <form>\n          <label>Provide Access: </label>\n          <input\n            type=\"text\"\n            placeholder=\" Address to grant access\"\n            ref={grantRef}\n          />\n          <Button\n            onClick={(event) => {\n              event.preventDefault();\n              const doctor = grantRef.current.value;\n              console.log(doctor);\n              props.grantAccess(doctor);\n            }}\n          >\n            {\" \"}\n            Submit\n          </Button>\n        </form>\n\n        <br />\n        <form>\n          <label> Revoke Access: </label>\n          <input\n            type=\"text\"\n            placeholder=\" Address to revoke access from\"\n            ref={doctorRef}\n          />\n          <Button\n            onClick={(event) => {\n              event.preventDefault();\n              const doctor = doctorRef.current.value;\n              console.log(doctor);\n              props.revokeAccess(doctor);\n            }}\n          >\n            {\" \"}\n            Submit\n          </Button>\n        </form>\n      </div>\n    );\n  };\n  if (!currentAccount) {\n    history.push(\"/\");\n  }\n  if (isDoctor == \"true\") {\n    history.push(\"/doctor_dashboard\");\n  }\n  if (isAdmin == \"true\") {\n    history.push(\"/Registration_office\");\n  }\n  return (\n    <div className=\"patient_main\">\n      <div className=\"nav_main\">\n        <Navbar expand=\"lg\">\n          <img\n            src={logo}\n            width=\"120\"\n            height=\"40\"\n            className=\"d-inline-block align-top\"\n          />\n          {/* patient */}\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav.Link a href=\"/patient\">\n              {\" \"}\n              <i class=\"fas fa-1x fa-user-circle\"></i> {name}{\" \"}\n            </Nav.Link>\n            <Button onClick={(e) => props.logout()}>\n              {\" \"}\n              <i class=\"fas fa-1x fa-sign-out-alt\"></i> Log out\n            </Button>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n\n      <div className=\"tab-wrapper\">\n        <Tab.Container defaultActiveKey=\"details\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\">\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"details\">\n                    <b>Details</b>\n                  </Nav.Link>\n                  <hr />\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"profile\">\n                    <b>AccessRecord</b>\n                  </Nav.Link>{\" \"}\n                  <hr />\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"uploadRecord\">\n                    {\" \"}\n                    <b>UploadRecord</b>\n                  </Nav.Link>\n                  <hr />\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"access\">\n                    <b>Grant/Revoke Acccess</b>\n                  </Nav.Link>\n                  <hr />\n                </Nav.Item>\n              </Nav>\n            </div>\n\n            <div className=\"col-sm-9\">\n              <h1> Welcome to MeDossier</h1>\n\n              <Tab.Content>\n                <Tab.Pane eventKey=\"details\" title=\"Details\">\n                  <Details />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"profile\" title=\"AcessRecord\">\n                  <Report />\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"uploadRecord\" title=\"UploadRecord\">\n                  <Upload />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"access\" title=\"Grant/Revoke Acccess\">\n                  <Access />\n                </Tab.Pane>\n                {/* </Tabs> */}\n              </Tab.Content>\n            </div>\n          </div>\n        </Tab.Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Patient;\n","import React, { useState } from \"react\";\nimport Web3 from \"web3\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableHead,\n  TableContainer,\n  TableBody,\n  TableCell,\n  TableRow,\n  Card,\n  Box,\n  Paper,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Tab, Row, Col, Nav } from \"react-bootstrap\";\nimport \"./general.css\";\nimport logo from \"./logo.png\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\nimport ipfs from \"../ipfs.js\";\nimport history from \"./history\";\n\n//main dashboard\nfunction DocDashboard(props) {\n  // const [currentAccount, setCurrentAccount] = useState(props.currentAccount);\n  // const[contract, setContract] = useState(props.contract);\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [gender, setGender] = useState(\"Female\");\n  const [dob, setDob] = useState(\"\");\n  const [blood, setBlood] = useState(\"\");\n  const [accountAddr, setAccountAddr] = useState(\"\");\n  const [authorized, isAuthorized] = useState(\"false\");\n  const [recordlen, setRecordLength] = useState(0);\n  const [records, setRecords] = useState([]);\n  const [dname, setDname] = useState(\"\");\n  const [visitedDate, setVisDate] = useState(\"\");\n  const [reason, setReason] = useState(\"\");\n  const [buffer, setBuffer] = useState(null);\n\n  //get the data from local storage\n  const docname = localStorage.getItem(\"docname\");\n  const faculty = localStorage.getItem(\"faculty\");\n  const license = localStorage.getItem(\"license\");\n  const hname = localStorage.getItem(\"hname\");\n  const isApproved = localStorage.getItem(\"isApproved\");\n  const contact = localStorage.getItem(\"contact\");\n  const currentAccount = localStorage.getItem(\"currentAccount\");\n\n  const web3 = new Web3(Web3.givenProvider);\n  const contract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n\n  const ispatient = localStorage.getItem(\"ispatient\");\n  const isAdmin = localStorage.getItem(\"isUser\");\n\n  //Get details of patient: can be accessed by anyone\n  const getPatientDetails = async (e) => {\n    try {\n      const result = await contract.methods\n        .getPatientDetails(accountAddr)\n        .call();\n      console.log(result);\n      setName(result[\"_name\"]);\n      setPhone(result[\"_phone\"]);\n      setBlood(result[\"_bloodgroup\"]);\n      setGender(result[\"_gender\"]);\n      setDob(result[\"_dob\"]);\n    } catch (error) {\n      console.log(error);\n    }\n    getPatientRecord();\n  };\n  //bullet tube vague brain excuse valley total whale scrap sense water unfold\n\n  //Get access to the patient record: only to authorized doctor\n  const getPatientRecord = async (e) => {\n    try {\n      //check whether doctor is authorized or not\n      const access = await contract.methods\n        .isAuthorized(accountAddr, currentAccount)\n        .call();\n      console.log(access);\n      isAuthorized(access);\n\n      //get the number of records\n      const rlen = await contract.methods.getrecordlist(accountAddr).call();\n      console.log(rlen);\n      setRecordLength(rlen);\n\n      if (authorized) {\n        let record = [];\n        for (var i = 0; i < recordlen; i++) {\n          const result = await contract.methods\n            .getPatientRecords(accountAddr, i)\n            .call({ from: currentAccount });\n          console.log(result);\n          record.push({\n            dname: result.dname,\n            reason: result.reason,\n            visDate: result.visitedDate,\n            ipfs: result.ipfs,\n          });\n        }\n        console.log(record);\n        setRecords(record);\n      } else {\n        alert(\"Sorry! You are not authorized to get the whole record.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //Only authorized doctor can add the patients record\n  const addPatientRecord = async (e) => {\n    try {\n      //whether doctor is authorized or not\n      const access = await contract.methods\n        .isAuthorized(accountAddr, currentAccount)\n        .call();\n      console.log(access);\n      isAuthorized(access);\n\n      if (authorized) {\n        //add the file buffer to ipfs\n        let ipfshash = await ipfs.files.add(buffer);\n        //url ro the ipfs stored file\n        let url = \"https://ipfs.io/ipfs/\" + ipfshash[0].hash;\n        console.log(ipfshash[0].hash);\n        console.log(url.toString());\n        // ipfshash[0].hash.toString()\n        const hash = ipfshash[0].hash;\n        // const hashs = String(hash)\n\n        await contract.methods\n          .addRecord(docname, reason, visitedDate, String(hash), accountAddr)\n          .send({ from: currentAccount, gas: 1000000 });\n      } else {\n        alert(\"Sorry! You are not authorized to get the whole record.\");\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Error Uploading Report\");\n    }\n  };\n\n  //Get the uploaded file and set its buffer\n  const captureFile = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const file = event.target.files[0];\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onload = async () => {\n      const buffer = await Buffer.from(reader.result);\n      setBuffer(buffer);\n    };\n  };\n\n  //Styling for table cell\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.info.main,\n      color: theme.palette.common.blue,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\n  if (!currentAccount) {\n    history.push(\"/\");\n  }\n  if (ispatient == \"true\") {\n    history.push(\"/patient\");\n  }\n  if (isAdmin == \"true\") {\n    history.push(\"/Registration_office\");\n  }\n\n  return (\n    <div className=\"DocDashboard\">\n      {/* Navbar */}\n      <div className=\"navbar\">\n        <a href=\"/doctor_dashboard\">\n          <Button o>\n            <img\n              src={logo}\n              width=\"120\"\n              height=\"40\"\n              className=\"d-inline-block align-top\"\n              alt=\"React Bootstrap logo\"\n            />\n          </Button>\n        </a>\n\n        {/* <Button a href=\"/doctor_dashboard\" > <i class=\"fas fa-1x fa-user-circle\"></i> {docname}  </Button> */}\n\n        <Button onClick={(e) => props.logout()}>\n          {\" \"}\n          <i class=\"fas fa-1x fa-sign-out-alt\" /> Log out\n        </Button>\n      </div>\n      {/* End Navbar */}\n\n      {/* Side Tabs */}\n      <div className=\"tab-wrapper\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <Tab.Container defaultActiveKey=\"your_details\">\n                <Row>\n                  <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <div>\n                        <Nav.Item>\n                          <Nav.Link eventKey=\"your_details\">\n                            My Details\n                          </Nav.Link>\n                        </Nav.Item>\n                      </div>\n\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"access_record\">\n                          Access Records\n                        </Nav.Link>\n                      </Nav.Item>\n\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"add_record\">Add Records</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n                  <Col sm={9}>\n                    <Tab.Content>\n                      {/* Doctors Details */}\n                      <Tab.Pane eventKey=\"your_details\">\n                        <div className=\"Details\">\n                          <h4>....Welcome to the meDossier....</h4>\n                          <h4>\n                            ..This is the place where you can access your\n                            patients records anywhere everywhere..\n                          </h4>\n                        </div>\n                        <div className=\"card\">\n                          <h3>Your Details</h3>\n                          <hr></hr>\n                          <div>\n                            <b>\n                              Account Address:<span>{currentAccount}</span>\n                            </b>\n                          </div>\n                          <div className=\"details\">\n                            <b>\n                              Name :<span>{docname}</span>\n                            </b>\n                            <br></br>\n                            <b>\n                              License Number :<span>{license}</span>\n                            </b>\n                            <br></br>\n                            <b>\n                              Hospital Name :<span>{hname}</span>\n                            </b>\n                            <br></br>\n                            <b>\n                              Faculty :<span>{faculty}</span>\n                            </b>\n                            <br />\n                            <b>\n                              Contact :<span>{contact}</span>\n                            </b>\n                            <br></br>\n                          </div>\n                        </div>\n                      </Tab.Pane>\n                      {/* End Doctor Details */}\n\n                      {/* Access Record Tab*/}\n                      <Tab.Pane eventKey=\"access_record\">\n                        <div className=\"Details\">\n                          <h4>....Welcome to the meDossier....</h4>\n                          <h4>\n                            ..Before you access the records, ask the patient for\n                            the permission..\n                          </h4>\n                        </div>\n                        {/* Enter Address Container */}\n                        <div class=\"small card\">\n                          <h5>\n                            <b>Enter the address of Patient:</b>\n                          </h5>\n                          <TextField\n                            id=\"outlined-basic full-width\"\n                            fullWidth\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            label=\"Patient Account Address\"\n                            onChange={(e) => setAccountAddr(e.target.value)}\n                          />\n                          <Button\n                            onClick={getPatientDetails}\n                            variant=\"contained\"\n                            style={{\n                              backgroundColor: \"#0080FF\",\n                              color: \"floralwhite\",\n                              height: \"10\",\n                              alignSelf: \"end\",\n                            }}\n                          >\n                            Get Record\n                          </Button>\n                        </div>\n                        {/* End Enter Address Container */}\n\n                        {/* Patient Details */}\n                        <div class=\"small card\">\n                          <Card>\n                            <h4>Patient Name: </h4>\n                            <b>Account Address:</b>\n                            <div className=\"smallcard\">\n                              <div>\n                                Name:{name}\n                                {\"\\t\\t\"}\n                              </div>\n                              <div>Phone:{phone}</div>\n                              <div>DoB:{dob}</div>\n                              <div>Gender:{gender}</div>\n                              <div>Blood Group:{blood}</div>\n                            </div>\n                          </Card>\n\n                          <div className=\"table\">\n                            <Box mt={3} mb={3}>\n                              <TableContainer component={Paper}>\n                                <Table size={\"small\"}>\n                                  <TableHead>\n                                    <TableRow>\n                                      <StyledTableCell>\n                                        Doctor Name\n                                      </StyledTableCell>\n                                      <StyledTableCell>Reason</StyledTableCell>\n                                      <StyledTableCell>\n                                        Visited Date\n                                      </StyledTableCell>\n                                      <StyledTableCell>Report</StyledTableCell>\n                                    </TableRow>\n                                  </TableHead>\n                                  <TableBody>\n                                    {records.map((record, index) => {\n                                      return (\n                                        <StyledTableRow key={index}>\n                                          <TableCell>\n                                            {record[\"dname\"]}\n                                          </TableCell>\n                                          <TableCell>\n                                            {record[\"reason\"]}\n                                          </TableCell>\n                                          <TableCell>\n                                            {record[\"visDate\"]}\n                                          </TableCell>\n                                          <TableCell>\n                                            <a\n                                              href={\n                                                \"https://ipfs.io/ipfs/\" +\n                                                record[\"ipfs\"]\n                                              }\n                                              target=\"_blrowank\"\n                                            >\n                                              View/Download Record\n                                            </a>\n                                          </TableCell>\n                                        </StyledTableRow>\n                                      );\n                                    })}\n                                  </TableBody>\n                                </Table>\n                              </TableContainer>\n                            </Box>\n                          </div>\n                        </div>\n                        {/* End Patient Details */}\n\n                        {/* view patient records */}\n\n                        {/* End Patient Record */}\n                      </Tab.Pane>\n                      {/* End Access Record */}\n\n                      {/* Add Record */}\n                      <Tab.Pane eventKey=\"add_record\">\n                        <div className=\"Details\">\n                          <h4>....Welcome to the meDossier....</h4>\n                          <h4>..Upload the new records of your patients..</h4>\n                        </div>\n                        <div className=\"card\">\n                          <h3>Add Records</h3>\n                          <hr></hr>\n                          <form>\n                            <TextField\n                              id=\"outlined-basic full-width\"\n                              fullWidth\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"Patient Account Address\"\n                              onChange={(e) => setAccountAddr(e.target.value)}\n                            />\n                            <TextField\n                              id=\"outlined-basic\"\n                              fullWidth\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"Doctor Name\"\n                              value={docname}\n                              onChange={(e) => setDname({ docname })}\n                            />\n                            <TextField\n                              id=\"outlined-basic\"\n                              fullWidth\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"Visit Reason\"\n                              onChange={(e) => setReason(e.target.value)}\n                            ></TextField>\n                            <TextField\n                              id=\"outlined-basic\"\n                              fullWidth\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              type=\"date\"\n                              label=\"Visited Date\"\n                              onChange={(e) => setVisDate(e.target.value)}\n                              InputLabelProps={{ shrink: true }}\n                            ></TextField>\n                            <TextField\n                              type=\"file\"\n                              label=\"Report\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{ shrink: true }}\n                              onChange={captureFile}\n                            ></TextField>\n                            <Button\n                              onClick={addPatientRecord}\n                              variant=\"contained\"\n                              fullWidth\n                              margin=\"normal\"\n                              style={{\n                                backgroundColor: \"#0080FF\",\n                                color: \"floralwhite\",\n                              }}\n                            >\n                              Add Record\n                            </Button>\n                          </form>\n                        </div>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DocDashboard;\n\n//Check the functions of the contract\n// const gas = await contract.methods.addPatient(\"name\",\"hname\",\"contact\",\"faculty\",\"blue\").estimateGas();\n// const result = await contract.methods.addPatient(\"name\",\"hname\",\"contact\",\"faculty\",\"blue\").send({from: currentAccount, gas: 1000000});\n// const gas = await contract.methods.addDoctor(\"name\",\"hname\",\"contact\",\"faculty\").estimateGas();\n// const result = await contract.methods.addDoctor(\"name\",\"hname\",\"contact\",\"faculty\").send({from: currentAccount, gas: 1000000}); // const gas = await contract.methods.grantAccess(\"0xAb5d5d8C5E257d35E41f955693b42d628C126A2E\").estimateGas();\n// const result = await contract.methods.grantAccess(\"0xc52Bb0B6A662859B2E182524585b2F0a676F7823\").send({from: currentAccount,gas:1000000});\n// console.log(result)\n// const gas = await contract.methods.grantAccess(\"0xAb5d5d8C5E257d35E41f955693b42d628C126A2E\").estimateGas();\n// const result = await contract.methods.grantAccess(\"0xc52Bb0B6A662859B2E182524585b2F0a676F7823\").send({from: currentAccount,gas:1000000});\n// console.log(result)\n","export const CONTRACT_ADDRESS=\"0x322300121e38E30Aeff17e40fc864a1C1A665062\";\nexport const ABI = [\n  {\n    \"inputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"dindex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"doctorList\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pindex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"registeredDoctorList\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"user\",\n    \"outputs\": [\n      {\n        \"internalType\": \"int256\",\n        \"name\": \"success\",\n        \"type\": \"int256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"docname\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"license\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"registerDoctor\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"pat\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"client\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isAuthorized\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isRegistered\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_dname\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_reason\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_visitedDate\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_ipfs\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"addRecord\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_phone\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_gender\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_dob\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_bloodgroup\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"addPatient\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getPatientDetails\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_phone\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_gender\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_dob\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_bloodgroup\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getrecordlist\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getdoctorlist\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getRegisteredDoctorslength\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getRegisteredDoctorsList\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"license\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_addr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getPatientRecords\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"dname\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"reason\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"visitedDate\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"ipfs\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_hname\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_faculty\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_contact\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"license\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"addDoctor\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"license\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getDoctorbyLicense\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"hospital\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_faculty\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isApproved\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"licenseno\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_name\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"getDoctorbyName\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"contact\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"hname\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"faculty\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isApproved\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"licenseno\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_address\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getDoctorByAddress\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"contact\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"hname\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"faculty\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isApproved\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"licenseno\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"grantAccess\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"revoke_access\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"doctorLogin\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]"],"sourceRoot":""}